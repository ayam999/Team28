pipeline {
  agent { 
      docker { 
          image 'python:3.7.2' } }
  stages {
    stage('Build') {
      steps {
        withEnv(["HOME=${env.WORKSPACE}"]){
            sh 'pip install --user flask'
            sh 'pip install --user pyrebase'
            sh 'pip install --user Flask-WTF'
            sh 'pip install --user email_validator'
            sh 'pip install --user --upgrade firebase-admin'
            sh 'pip install --user json-e'
            sh 'pip install --user requests --upgrade'
            sh 'pip install --user Flask-JSGlue'
            sh 'pip install --user pyflakes'
        }
      }
    }
     
    stage('Cloning Git') {
      steps {
       git 'https://github.com/ayam999/Team28.git'
      }
    }
    stage('test') {
      steps {
        withEnv(["HOME=${env.WORKSPACE}"]){
            sh 'python test2.py'
            sh 'python -m pyflakes templates/'
        }
      }   
    } 
  }


     stage('coverage') {
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    dir("TEME28"){
                        sh "python -m coverage run --include='codejana_flask/*' App.py test"
                        sh "python -m coverage report"
                    }
                }
            }
        }
		    '''
			    stage('pylint') {
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    dir("TEME28/codejana_flask"){
			sh "python -m pylint settings.py"
			sh "python -m pylint urls.py"
                        sh "python -m pylint __init__.py"
		    }
		    dir("DjangoWebProject2/app"){
                        sh "python -m pylint admin.py"
		    }
		}
	    }
			    }
			    
		    }

'''



agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python '
                }
            }
            steps {
                sh 'python -m py_compile app.py'
            }
            }
        }


}




